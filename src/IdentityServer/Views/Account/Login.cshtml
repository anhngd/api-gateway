@model IdentityServer.Public.Account.LoginViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject SignInManager<ApplicationUser> SignInManager
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Log in"];
}
<div class="page-header">
    <h4>@Localizer["Sign In"]</h4>
    <p>@Localizer["You can sign in using your Tripbricks.com account to access our services."]</p>
</div>
<div class="row">
    @if (Model.EnableLocalLogin)
    {
        <div class="col-sm-12">
            <div class="text-danger">@ViewData["message"]</div>
            <form asp-route="Login">
                <input type="hidden" asp-for="ReturnUrl" />

                <fieldset>
                    <div class="form-group">
                        <label asp-for="Username">@Localizer["Email"]</label>
                        <input class="form-control" placeholder="@Localizer["Input your email"]" asp-for="Username" autofocus>
                    </div>
                    <div class="form-group">
                        <label asp-for="Password">@Localizer["Password"]</label>
                        <input type="password" class="form-control" placeholder="@Localizer["Input your password"]" asp-for="Password" autocomplete="off">
                    </div>


                    <div class="col-md-12 row">
                        @if (Model.AllowRememberLogin)
                        {
                            <div class="form-group remember-login">
                                <label asp-for="RememberLogin">
                                    <input asp-for="RememberLogin">
                                    <span>@Localizer["Remember me"]</span>
                                </label>
                            </div>
                        }
                    </div>

                    <div class="form-group">
                        <button class="btn btn-primary btn-tripbricks" name="button" value="login">@Localizer["Sign In"]</button>
                    </div>
                    @if (Model.VisibleExternalProviders.Any())
                    {
                        <div class="form-group">
                            <center>
                                <span>@Localizer["or Sign in with"] </span>
                                @foreach (var provider in Model.VisibleExternalProviders)
                                {
                                    <a class="social-login social-@provider.DisplayName.ToLower()"
                                       asp-controller="External"
                                       asp-action="Challenge"
                                       asp-route-provider="@provider.AuthenticationScheme"
                                       asp-route-returnUrl="@Model.ReturnUrl">
                                        @provider.DisplayName
                                    </a>
                                }
                            </center>
                        </div>

                    }
                </fieldset>
                <div class="col-md-12">
                    <div><center><a asp-action="ForgotPassword" asp-controller="Account" class="text-tripbricks">@Localizer["Forgot password?"]</a></center></div>
                </div>
                <div class="col-md-12">
                    <div><center><a asp-action="Register" asp-controller="Account" class="text-tripbricks">@Localizer["Don't have an account yet? Create your account now"]</a></center></div>
                </div>
            </form>
        </div>
    }

    @if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
    {
        <div class="alert alert-warning">
            <strong>@Localizer["Invalid login request"]</strong>
            @Localizer["There are no login schemes configured for this client."]
        </div>
    }
</div>
